# Table of Contents
Divided in proven stacks to determine which stack to use to achieve certain business requirements.

Stacks have an unique ID with a code name, preferred by a meteorite name.
Such names can be found here: https://en.wikipedia.org/wiki/Category:Meteorites_by_name

Stacks are described through a simple ordering convention:

meteor, router, template engine, language, css, testing framework, toolchain

# Why create naming for different Stacks?
Technical issues are often high priority - there is little room for error. Using
names for Stacks allows them to remain human-friendly and a practice or solution can
be tagged by these names; allowing engineers to find solutions that are tested - or
after experimenting provide detailed feedback without disclosing information that
could harm their business. For polls and popularity research, this data can become
very valuable to provide metrics and industrial adoption.

These are listed as following:

* Springwater - * Meteor, Flow-Router, Blaze, CoffeeScript, Stylus, Cucumber, Basic *
* Brenham - * Meteor, Flow-Router, Blaze, JavaScript ES6, CSS, Cucumber, Basic *
* Andura - * Meteor, Flow-Router, Blaze, JavaScript ES6, Sass, Cucumber, Basic *
* Treysa - * Meteor, Flow-Router, Blaze, JavaScript ES6, Less, Cucumber, Basic *
* Yamato - * Meteor, Iron-Router, Blaze, CoffeeScript, Stylus, Cucumber, Basic *
* Loreto - * Meteor, Iron-Router, Blaze, JavaScript ES6, CSS, Cucumber, Basic *
* Gibeon - * Meteor, Iron-Router, Blaze, JavaScript ES6, Sass, Cucumber, Basic *
* Allende - * Meteor, Iron-Router, Blaze, JavaScript ES6, Less, Cucumber, Basic *


Total practices: 8
